#!/bin/bash
set -e

readonly EC2_INSTANCE_METADATA_URL="http://169.254.169.254/latest/meta-data"
readonly SNOWPLOW_TRACKING_CLI_BIN="/usr/local/bin/snowplow-tracking-cli"

function log() {
  echo "$@"
}

function die() {
  local __die_msg="$1"
  local __die_code="$${2:-1}"
  echo "$@" >&2 ; exit $__die_code;
}

function install_snowplow_tracking_cli() {
  log "Installing Snowplow Tracking CLI ..."

  sudo wget https://github.com/snowplow/snowplow-tracking-cli/releases/download/0.4.0/snowplow_tracking_cli_0.4.0_linux_amd64.zip -P /tmp/
  sudo unzip /tmp/snowplow_tracking_cli_0.4.0_linux_amd64.zip -d /usr/local/bin/
}

function lookup_path_in_instance_metadata() {
  [ "$#" -eq 1 ] || die "func:lookup_path_in_instance_metadata > 1 argument required, $# provided"
  local __path="$1"

  local __ec2_metadata_token
  __ec2_metadata_token=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
  curl -H "X-aws-ec2-metadata-token: $${__ec2_metadata_token}" --silent --location "$EC2_INSTANCE_METADATA_URL/$__path/"
}

function get_instance_id() {
  lookup_path_in_instance_metadata "instance-id"
}

function snowplow_telemetry_track_vm_event() {
  [ "$#" -eq 1 ] || die "func:snowplow_telemetry_track_vm_event > 1 argument required, $# provided"
  local __event_schema="$1"

  log "Tracking VM Telemetry event '$__event_schema' ..."

  if ! command -v $${SNOWPLOW_TRACKING_CLI_BIN} &> /dev/null; then
    install_snowplow_tracking_cli
  fi

  if [ "${user_provided_id_raw}" == "" ]; then
    local user_provided_id=null
  else
    local user_provided_id="\"${user_provided_id_raw}\""
  fi

  local __oss_context_json="{
    \"schema\": \"${oss_context_schema}\",
    \"data\": {
      \"userProvidedId\": $${user_provided_id},
      \"autoGeneratedId\": \"${auto_generated_id}\",
      \"instanceId\": \"$(get_instance_id)\",
      \"cloud\": \"${cloud}\",
      \"region\": \"${region}\",
      \"moduleName\": \"${module_name}\",
      \"moduleVersion\": \"${module_version}\",
      \"applicationName\": \"${app_name}\",
      \"applicationVersion\": \"${app_version}\"
    }
  }"

  $${SNOWPLOW_TRACKING_CLI_BIN} \
    --collector "${collector_uri}" \
    --appid "${tracker_app_id}" \
    --method "POST" \
    --schema "$${__event_schema}" \
    --json "{}" \
    --contexts "[$${__oss_context_json}]"

  log "Tracking completed successfully!"
}

[ "$#" -eq 1 ] || die "Snowplow VM Telemetry expected 1 argument, $# provided"

event_schema="$${1}"
[[ $event_schema =~ ^iglu:com.snowplowanalytics.oss/vm_[a-z]+/jsonschema/[0-9]+-[0-9]+-[0-9]+$ ]] || \
  die "Snowplow VM Telemetry event schema '$${event_schema}' failed regex check, must match '^iglu:com.snowplowanalytics.oss/vm_[a-z]+/jsonschema/[0-9]+-[0-9]+-[0-9]+$'!"

snowplow_telemetry_track_vm_event "$${event_schema}"
